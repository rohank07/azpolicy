apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: testdeployment
spec:
  crd:
    spec:
      names:
        kind: TestDeployment
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package testdeployment

        import data.lib.exclude_container_image.is_excluded

        missing(obj, field) = true {
          not obj[field]
        }

        missing(obj, field) = true {
          obj[field] == ""
        }

        violation[{"msg": msg, "field": field}] {
          container := input.review.object.spec[field][_]
          not is_excluded(container)

          request_memory_missing := missing(container.resources.requests, "memory") {
            field == "memory"
          }
          request_cpu_missing := missing(container.resources.requests, "cpu") {
            field == "cpu"
          }

          limit_memory_missing := missing(container.resources.limits, "memory") {
            field == "memory"
          }

          msg := sprintf("TEST container <%v> has no memory request", [container.name]) { request_memory_missing }
          msg := sprintf("TEST container <%v> has no CPU request", [container.name]) { request_cpu_missing }
          msg := sprintf("TEST container <%v> has no memory limit", [container.name]) { limit_memory_missing }
        }

